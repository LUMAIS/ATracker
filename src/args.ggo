# Configuration file for the automatic generation of the input options parsing

package "atracker"
version "1.0.0"
versiontext "Author:  (c) Serhii Oleksenko <serhii@lumais.com>, Artem Lutov <lav@lumais.com>
Sources:  https://github.com/LUMAIS/atracker
"

purpose "Basic ant tracker (former AntDetect), whose stable functionality is integrated into LAFFTrack/artemis"

usage "atracker [OPTIONS]

Examples:
  $ ./atracker -m data/AntED_yolo5_traced_992.pt -v data/3.mp4 -s 1 -n 8
  $ ./atracker data/Cflo_troph_count_3-38_3-52.mp4 -n 32
"

description "Basic ant tracker, which uses YOLO-based ant events detector and\
 several tracking techniques to track ant-related objects (e.g., ant, larva, pupa)\
 and their interaction events (e.g., trophallaxis).
NOTE: this application is used mainly for internal evaluation and valudation purposes\
 before integrating selected functionality into LAFFTrack/artemis.
"

# defgroup  "output" groupdesc="Output parameters" required
option  "output" o  "output directory" string typestr="filename" default="."
option  "fout_suffix" f  "additional suffix for the resulting output files" string

# defgroup  "model" groupdesc="Parameters of the object detector model"
defgroup "detection" groupdesc="Object detection parameters" required
groupoption  "model" m  "path to the object detector (PyTorch ML model)"
  string typestr="filename" group="detection"
groupoption  "ant-length" a  "expected ant length"
  int default="80" group="detection"
option  "confidence" c  "confidence threshold for the calling object detector model,\
 typically [0.25, 0.85] for a YOLOv5-based model"
  float default="0.32" dependon="model"
option  "rescale" r  "extend and rescale canvas of the input frames to ensure the\
 expected size of ants E (0, 1). NOTE: causes a computational overhead without\
 affecting original coordinates"
  float default="1" dependon="model"
option  "cuda" g  "computational device for the object detector (CUDA GPU or CPU}"
 flag off dependon="model"

defgroup  "input" groupdesc="Input data" required
groupoption  "img" i  "path to the input image" group="input"
  string typestr="filename" group="input"
groupoption  "video" v  "path to the input video"
  string typestr="filename" group="input"
option  "frame_start" s  "start frame index" int default="0" dependon="video"
option  "frame_num" n  "the number of frames" int default="-1" dependon="video"

# Set optional options by default, allow input files to be unnamed parameters
args "--default-optional"  # --unamed-opts=clusterings
#args "--unamed-opts=clusterings"   # Allow input files to be unnamed parameters


## = Changelog =
# v1.0.0 - AntDetect is extended with command-line processing, output of the tracking data, and refactored to atracker


# Basic structure, see https://www.gnu.org/software/gengetopt/gengetopt.html#Basic-Usage
#     package "<packname>"
#     version "<version>"
#     purpose "<purpose>"
#     usage "<usage>"
#     description "<description>"
#     versiontext "<versiontext>"
#
#     args "<command line options>"
#
#     option <long> <short> "<desc>"
#         {details="<detailed description>"}
#         {argtype} {typestr="<type descr>"}
#         {values="<value1>","<value2>",...}
#         {default="<default value>"}
#         {dependon="<other option>"}
#         {required} {argoptional} {multiple}
#         {hidden}
#
#     option <long> <short> "<desc>" flag <on/off>
#
#     section "section name" {sectiondesc="optional section description"}
#
#     text "a textual sentence"
#
#
# Mutually exclusive options should belong to a group:
#
#     defgroup "<group name>" {groupdesc="<group description>"} {required}
#     groupoption <long> <short> "<desc>" <argtype> group="<group name>" \
#          {argoptional} {multiple}
#
#     defgroup "my grp2"
#     defgroup "grp1" groupdesc="an option of this group is required" required
#     groupoption "opta" a "string a" group="grp1" multiple
